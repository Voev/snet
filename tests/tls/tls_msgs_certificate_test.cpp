#include <vector>
#include <gtest/gtest.h>
#include <snet/tls/msgs/certificate.hpp>
#include <snet/tls/session.hpp>

#include <snet/utils/compare_vectors.hpp>

using namespace testing;
using namespace snet::tls;

struct SerializeTestParam
{
    ProtocolVersion version;
    std::vector<uint8_t> cert;
};

class CertificateSerializeTest : public TestWithParam<SerializeTestParam>
{
public:
    CertificateSerializeTest() = default;
    ~CertificateSerializeTest() = default;

protected:
    RecordPool recordPool_{8};
};

TEST_P(CertificateSerializeTest, DeserializeSerialize)
{
    SerializeTestParam param = GetParam();
    std::vector<uint8_t> serialized(param.cert.size());
    size_t serializedLength;

    MetaInfo metaInfo{};
    metaInfo.version = param.version;

    Certificate certificate;
    ASSERT_NO_THROW(certificate = Certificate::deserialize(param.cert, metaInfo));

    Session session(recordPool_);
    ASSERT_NO_THROW(session.processCertificate(certificate));

    if (param.version == ProtocolVersion::TLSv1_3)
    {
        std::get<TLSv13Certificate>(certificate.message).entryList[0].cert = session.getServerCert();
        /// @todo: set extensions
    }
    else
    {
        std::get<TLSv1Certificate>(certificate.message).entryList[0].cert = session.getServerCert();
    }

    ASSERT_NO_THROW(serializedLength = certificate.serialize(serialized, session));
    serialized.resize(serializedLength);

    ASSERT_EQ(serialized, param.cert);
}

// clang-format off
std::vector<SerializeTestParam> gCertificateParams =
{
    {
        ProtocolVersion::TLSv1_2,
        {
            /* 0x16, 0x03, 0x03, 0x03, 0x0b, 0x0b, 0x00, 0x03, */
            /* 0x07, */ 0x00, 0x03, 0x04, 0x00, 0x03, 0x01, 0x30,
            0x82, 0x02, 0xfd, 0x30, 0x82, 0x01, 0xe5, 0xa0,
            0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x10, 0x90,
            0xa0, 0x5a, 0x20, 0x82, 0xb3, 0xa2, 0xb0, 0x02,
            0x6f, 0xec, 0xd5, 0x0c, 0x87, 0x97, 0x3b, 0x7f,
            0x16, 0x0d, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86,
            0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05,
            0x00, 0x30, 0x1b, 0x31, 0x19, 0x30, 0x17, 0x06,
            0x03, 0x55, 0x04, 0x03, 0x0c, 0x10, 0x52, 0x6f,
            0x6f, 0x74, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69,
            0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x30, 0x1e,
            0x17, 0x0d, 0x32, 0x35, 0x30, 0x37, 0x30, 0x37,
            0x31, 0x38, 0x32, 0x30, 0x31, 0x34, 0x5a, 0x17,
            0x0d, 0x32, 0x36, 0x30, 0x37, 0x30, 0x37, 0x31,
            0x38, 0x32, 0x30, 0x31, 0x34, 0x5a, 0x30, 0x14,
            0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
            0x03, 0x0c, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
            0x68, 0x6f, 0x73, 0x74, 0x30, 0x82, 0x01, 0x22,
            0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
            0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03,
            0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a,
            0x02, 0x82, 0x01, 0x01, 0x00, 0xce, 0x41, 0x7d,
            0xbd, 0x7a, 0xe1, 0xab, 0x76, 0x9a, 0x25, 0xd4,
            0xb3, 0x72, 0xa0, 0x68, 0xd8, 0x2b, 0x19, 0x8c,
            0xf6, 0xe4, 0x71, 0x70, 0x0d, 0x6f, 0xac, 0x67,
            0x4c, 0x4f, 0x4b, 0x07, 0xbe, 0xd9, 0x4e, 0xaa,
            0xad, 0x66, 0xab, 0x05, 0x7b, 0x3b, 0x97, 0x4c,
            0xe4, 0x24, 0x16, 0xd0, 0xd4, 0x67, 0x57, 0xdf,
            0xa9, 0xb4, 0x6e, 0x43, 0xc7, 0x2e, 0xa6, 0x1f,
            0x48, 0x29, 0xbe, 0xd0, 0x8b, 0xdd, 0xfb, 0xc4,
            0x07, 0x2f, 0xb8, 0xbf, 0x3f, 0x2e, 0x0e, 0x46,
            0xc5, 0xde, 0xe3, 0x64, 0xd7, 0xaa, 0xbd, 0x9b,
            0xe1, 0xfb, 0x76, 0x67, 0xa2, 0x74, 0x29, 0xe7,
            0xd0, 0x4d, 0x27, 0x81, 0xd7, 0x23, 0x31, 0xd0,
            0x08, 0x1a, 0x91, 0x1d, 0xdd, 0x09, 0x94, 0x9a,
            0x5c, 0x5c, 0x12, 0xb4, 0x03, 0xb3, 0xde, 0xc8,
            0xa7, 0x59, 0x2c, 0xc2, 0x96, 0xce, 0x4b, 0x9c,
            0x84, 0x38, 0xdb, 0x37, 0xeb, 0x07, 0x36, 0xc8,
            0xb2, 0x05, 0x95, 0x5d, 0x01, 0x33, 0x34, 0xf2,
            0x52, 0x7a, 0x30, 0xf6, 0x70, 0x2f, 0x77, 0xa7,
            0x20, 0x5e, 0x11, 0xb7, 0xa5, 0xe0, 0xb6, 0xac,
            0x2e, 0xa1, 0x87, 0x44, 0x98, 0x62, 0x0f, 0xe3,
            0xdf, 0x3a, 0x8d, 0xd4, 0xc0, 0xab, 0x88, 0xaa,
            0x06, 0xba, 0x2f, 0x5b, 0x5b, 0xfc, 0x3a, 0x1c,
            0x79, 0xbd, 0xe9, 0xe7, 0x4f, 0x46, 0x46, 0x06,
            0x6a, 0xc0, 0x64, 0xb5, 0xa6, 0x0f, 0x9c, 0x12,
            0x4c, 0x50, 0x8f, 0x0d, 0x93, 0x84, 0x70, 0xde,
            0x40, 0xcf, 0x89, 0x5b, 0xfd, 0xbe, 0xff, 0x5b,
            0xfb, 0xd6, 0xb8, 0xb7, 0x3e, 0xd2, 0x28, 0x9b,
            0xb8, 0xf2, 0xaa, 0xeb, 0x70, 0x27, 0xd5, 0x03,
            0x7a, 0x0f, 0x42, 0xa3, 0x42, 0x71, 0xb9, 0x92,
            0xea, 0xd5, 0x97, 0xdb, 0x80, 0x43, 0x5c, 0x62,
            0x4d, 0xec, 0xd7, 0x30, 0x24, 0x59, 0x61, 0x62,
            0x4e, 0x99, 0x23, 0x88, 0x1f, 0x02, 0x03, 0x01,
            0x00, 0x01, 0xa3, 0x40, 0x30, 0x3e, 0x30, 0x14,
            0x06, 0x03, 0x55, 0x1d, 0x11, 0x04, 0x0d, 0x30,
            0x0b, 0x82, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
            0x68, 0x6f, 0x73, 0x74, 0x30, 0x16, 0x06, 0x03,
            0x55, 0x1d, 0x25, 0x01, 0x01, 0xff, 0x04, 0x0c,
            0x30, 0x0a, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05,
            0x05, 0x07, 0x03, 0x01, 0x30, 0x0e, 0x06, 0x03,
            0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04,
            0x03, 0x02, 0x05, 0xa0, 0x30, 0x0d, 0x06, 0x09,
            0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
            0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00,
            0x6b, 0xa7, 0x0c, 0xdc, 0x7f, 0x3c, 0xd3, 0x55,
            0x09, 0x72, 0x82, 0x88, 0xac, 0x21, 0xcc, 0xc8,
            0x39, 0xa8, 0xab, 0xf2, 0x70, 0x15, 0xc0, 0xb2,
            0xd0, 0x23, 0x9d, 0x1b, 0xee, 0x51, 0x1a, 0x4e,
            0x78, 0x54, 0xa1, 0x05, 0xd8, 0xa7, 0x1d, 0x28,
            0x17, 0x76, 0xc4, 0x8b, 0xec, 0x4f, 0xa3, 0xc6,
            0xbd, 0x1f, 0x9f, 0x18, 0xd1, 0x99, 0xd9, 0x7a,
            0x81, 0xd8, 0x13, 0x4d, 0x15, 0xea, 0x57, 0x91,
            0x9c, 0x76, 0xc3, 0x95, 0xae, 0x00, 0x95, 0x01,
            0x63, 0xb9, 0x54, 0xc4, 0xfc, 0x1c, 0x28, 0xf9,
            0x8f, 0x89, 0xaa, 0x66, 0xb9, 0x9f, 0x61, 0x3d,
            0xb4, 0x8e, 0x0f, 0xd6, 0x64, 0xf2, 0x5c, 0x71,
            0x00, 0x28, 0x8f, 0x07, 0x8d, 0xc9, 0x41, 0xb6,
            0x44, 0xad, 0xaf, 0xd0, 0x46, 0xac, 0xe4, 0x9e,
            0xe2, 0xda, 0x95, 0x5e, 0x78, 0x3a, 0xf7, 0xe4,
            0x55, 0x79, 0xfe, 0xf2, 0x56, 0x33, 0x80, 0x12,
            0x7c, 0xeb, 0x9d, 0xd5, 0x76, 0xf7, 0x08, 0xbf,
            0x5d, 0xdf, 0xf7, 0x70, 0x63, 0x69, 0x4c, 0x2b,
            0xf9, 0xb8, 0x4c, 0x00, 0x70, 0x63, 0xbe, 0x57,
            0x9d, 0x57, 0x71, 0xd3, 0xe2, 0xf0, 0xb8, 0x68,
            0x06, 0x4c, 0x5a, 0x88, 0x80, 0x9b, 0xc4, 0x36,
            0x53, 0x1a, 0x35, 0xbb, 0x7e, 0xcc, 0x9d, 0xaa,
            0xe3, 0xc1, 0x6d, 0xf4, 0x69, 0xe4, 0x76, 0xec,
            0x53, 0x4f, 0x2b, 0x57, 0xb1, 0xe8, 0x7c, 0x05,
            0x01, 0x5e, 0x24, 0xed, 0x06, 0x23, 0xa9, 0x90,
            0x84, 0xca, 0x9e, 0x3d, 0x80, 0x11, 0xa3, 0xe7,
            0x2a, 0x05, 0x7a, 0x16, 0xd7, 0x8d, 0x37, 0x27,
            0x3a, 0x77, 0x2d, 0x01, 0x0e, 0x20, 0x20, 0x41,
            0x25, 0x43, 0x44, 0x5c, 0x45, 0xd0, 0x27, 0x96,
            0xc7, 0x22, 0x92, 0x39, 0x06, 0x68, 0x3b, 0x5f,
            0xdf, 0xc4, 0x37, 0xff, 0x9d, 0x3a, 0x36, 0x93,
            0xc1, 0xde, 0x88, 0x46, 0x97, 0xda, 0x20, 0x88
        }
    },
    {
        ProtocolVersion::TLSv1_3,
        {
            0x00, 0x00, 0x03, 0x06, 0x00, 0x03, 0x01, 0x30,
            0x82, 0x02, 0xfd, 0x30, 0x82, 0x01, 0xe5, 0xa0,
            0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x27, 0x8d,
            0xf5, 0x2a, 0xa9, 0x87, 0xfb, 0x52, 0x8b, 0x27,
            0xbb, 0x54, 0xef, 0xa6, 0x72, 0x32, 0x9e, 0xe5,
            0x76, 0xde, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86,
            0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05,
            0x00, 0x30, 0x1b, 0x31, 0x19, 0x30, 0x17, 0x06,
            0x03, 0x55, 0x04, 0x03, 0x0c, 0x10, 0x52, 0x6f,
            0x6f, 0x74, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69,
            0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x30, 0x1e,
            0x17, 0x0d, 0x32, 0x35, 0x30, 0x37, 0x31, 0x31,
            0x32, 0x30, 0x32, 0x37, 0x30, 0x33, 0x5a, 0x17,
            0x0d, 0x32, 0x36, 0x30, 0x37, 0x31, 0x31, 0x32,
            0x30, 0x32, 0x37, 0x30, 0x33, 0x5a, 0x30, 0x14,
            0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
            0x03, 0x0c, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
            0x68, 0x6f, 0x73, 0x74, 0x30, 0x82, 0x01, 0x22,
            0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
            0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03,
            0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a,
            0x02, 0x82, 0x01, 0x01, 0x00, 0x95, 0x12, 0x16,
            0x78, 0x03, 0x5b, 0x1b, 0xea, 0x78, 0x50, 0x70,
            0x1c, 0xc6, 0xd5, 0x63, 0x4f, 0x90, 0xb1, 0x82,
            0xc3, 0x78, 0x58, 0x76, 0x12, 0x90, 0xc8, 0xc9,
            0xaa, 0x7f, 0x71, 0x2a, 0xb3, 0x28, 0xcd, 0xce,
            0x9b, 0x20, 0x85, 0xfb, 0x9d, 0x68, 0xf8, 0xe2,
            0xb6, 0x22, 0x31, 0x71, 0x57, 0xa5, 0x6a, 0x07,
            0x37, 0x83, 0x71, 0x51, 0x0f, 0x7f, 0x09, 0xa4,
            0x7a, 0xa6, 0xf4, 0xf6, 0x33, 0xa8, 0x30, 0xe5,
            0x9b, 0xd1, 0xf4, 0x19, 0xdd, 0x13, 0x27, 0x30,
            0x39, 0x11, 0x49, 0x14, 0x85, 0xa4, 0x54, 0x84,
            0xb6, 0x5d, 0xaf, 0x17, 0xa9, 0x59, 0x47, 0xb1,
            0xcb, 0x4e, 0x94, 0x9b, 0xed, 0x1a, 0x49, 0x1b,
            0x4d, 0x81, 0xa8, 0xde, 0x7f, 0x76, 0x45, 0xd6,
            0xef, 0xa1, 0x35, 0xb0, 0x9d, 0xd4, 0x2a, 0xf0,
            0x4a, 0x58, 0x5b, 0xcc, 0x6a, 0x4a, 0xc6, 0x17,
            0xd5, 0xaf, 0x5d, 0x12, 0xde, 0xca, 0xfb, 0xe5,
            0xf1, 0x61, 0xb9, 0xe1, 0x66, 0xc4, 0xe6, 0x52,
            0xfd, 0x86, 0x5a, 0x49, 0x16, 0x19, 0x1e, 0xe9,
            0x22, 0x9c, 0xdf, 0xe2, 0xe4, 0xbb, 0x86, 0x40,
            0xff, 0xb9, 0x1d, 0x38, 0x03, 0xc2, 0xcd, 0x2d,
            0x31, 0x8f, 0x01, 0x66, 0xce, 0xd2, 0xf1, 0x9d,
            0x93, 0xf4, 0x99, 0x94, 0xfd, 0x89, 0x16, 0xef,
            0xa4, 0x7c, 0x17, 0x87, 0xed, 0x02, 0x9d, 0x3b,
            0x67, 0x04, 0x6f, 0x2f, 0x10, 0x35, 0x14, 0xc7,
            0x64, 0x8e, 0xfe, 0x10, 0x51, 0x27, 0x59, 0x40,
            0x4b, 0xe6, 0x7a, 0xf4, 0x33, 0xcc, 0x93, 0xa0,
            0x18, 0x6e, 0x2a, 0x37, 0xc8, 0xc5, 0x17, 0xda,
            0x3d, 0x69, 0xad, 0x22, 0xeb, 0x5a, 0xa9, 0xff,
            0xdf, 0xa2, 0x22, 0xe5, 0x8b, 0xf5, 0x0f, 0x14,
            0x42, 0x36, 0xa0, 0x9f, 0x2f, 0xe7, 0xcd, 0xe3,
            0x2e, 0xa8, 0xbc, 0x89, 0x9e, 0x41, 0xd4, 0xd9,
            0xfe, 0xaf, 0x4a, 0x26, 0xb1, 0x02, 0x03, 0x01,
            0x00, 0x01, 0xa3, 0x40, 0x30, 0x3e, 0x30, 0x14,
            0x06, 0x03, 0x55, 0x1d, 0x11, 0x04, 0x0d, 0x30,
            0x0b, 0x82, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
            0x68, 0x6f, 0x73, 0x74, 0x30, 0x16, 0x06, 0x03,
            0x55, 0x1d, 0x25, 0x01, 0x01, 0xff, 0x04, 0x0c,
            0x30, 0x0a, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05,
            0x05, 0x07, 0x03, 0x01, 0x30, 0x0e, 0x06, 0x03,
            0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04,
            0x03, 0x02, 0x05, 0xa0, 0x30, 0x0d, 0x06, 0x09,
            0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
            0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00,
            0xa5, 0xd8, 0x4a, 0xa3, 0xae, 0xe8, 0x03, 0x1c,
            0x93, 0xba, 0xe1, 0xd7, 0xeb, 0x95, 0xfe, 0x98,
            0x76, 0x87, 0x39, 0x6f, 0x36, 0x30, 0xc4, 0xeb,
            0x42, 0x6c, 0x93, 0x6a, 0xbc, 0x80, 0xed, 0x47,
            0x59, 0x42, 0xfd, 0xd5, 0xbb, 0x64, 0x10, 0xf0,
            0x28, 0x79, 0x09, 0x35, 0x36, 0x5f, 0x7d, 0xec,
            0x72, 0x82, 0x00, 0x42, 0x6c, 0xb1, 0xec, 0xaa,
            0x7c, 0x35, 0x6c, 0xcd, 0xec, 0x7a, 0x1d, 0x17,
            0x38, 0x9e, 0x9d, 0x93, 0xe6, 0x04, 0xcd, 0x8d,
            0x83, 0xbe, 0x03, 0xa0, 0x93, 0x0a, 0x76, 0x20,
            0xeb, 0x62, 0xf0, 0x1d, 0x8f, 0x31, 0x86, 0x0d,
            0x11, 0x38, 0x9b, 0x70, 0x2b, 0x53, 0xaf, 0xfc,
            0xe6, 0xbc, 0x4b, 0xaa, 0x93, 0x12, 0x05, 0x6e,
            0xaf, 0x4b, 0x0f, 0x2c, 0xfe, 0x3b, 0x97, 0x23,
            0xc9, 0x96, 0xc6, 0x44, 0x1a, 0x03, 0xb7, 0x5b,
            0x93, 0x20, 0xe1, 0x9d, 0x1c, 0xc4, 0x79, 0x7a,
            0x1c, 0xf0, 0x32, 0xdc, 0x39, 0x57, 0x86, 0xc3,
            0x8b, 0x9c, 0x69, 0x03, 0x2b, 0x97, 0x46, 0x30,
            0x4b, 0x29, 0xca, 0x9a, 0x03, 0x23, 0x14, 0x3d,
            0xf4, 0x72, 0x34, 0x8b, 0x32, 0x7a, 0xa0, 0xde,
            0x79, 0xe9, 0x0f, 0xf3, 0x8b, 0xbe, 0x6a, 0x76,
            0xaf, 0x09, 0x4a, 0x77, 0x18, 0xcd, 0xf1, 0xa7,
            0xef, 0x17, 0x59, 0x04, 0x14, 0x6f, 0x88, 0xa0,
            0xd4, 0xe6, 0x7a, 0xb1, 0xc5, 0x61, 0x29, 0x8e,
            0x7b, 0x18, 0xe8, 0x73, 0xcc, 0xc3, 0x1f, 0xd9,
            0xe6, 0x7b, 0x71, 0x66, 0xbb, 0xdf, 0xca, 0xd7,
            0x8a, 0x6c, 0x0e, 0xc6, 0x1d, 0xdc, 0x64, 0x48,
            0xd2, 0xb6, 0x65, 0x85, 0xb4, 0x89, 0xb4, 0xa6,
            0xe3, 0x55, 0x19, 0xd9, 0x67, 0x3d, 0x7c, 0xa3,
            0x72, 0x8c, 0x88, 0x15, 0x11, 0xd9, 0x4c, 0x7e,
            0xa2, 0xf3, 0xd5, 0xe5, 0xdf, 0x15, 0x7e, 0xa6,
            0x40, 0x6e, 0x31, 0xc8, 0x20, 0x5d, 0xab, 0x75,
            0x00, 0x00,
        }
    }
}; // clang format on

INSTANTIATE_TEST_SUITE_P(CertificateTests, CertificateSerializeTest, ValuesIn(gCertificateParams));
